<launch>
 <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle]"/>



  <!-- Gmapping -->
  <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
    <param name="base_frame" value="base_footprint"/>
    <param name="odom_frame" value="odom"/>

<!--  How long (in seconds) between updates to the map.
      Lowering this number updates the occupancy grid more often,
      at the expense of greater computational load.-->
    <param name="map_update_interval" value="2.0"/>
<!--  The maximum usable range of the laser. A beam is cropped to this value.-->
    <param name="maxUrange" value="4.0"/>
<!--  Minimum score for considering the outcome of the scan matching good.
      Can avoid jumping pose estimates in large open spaces when using laser scanners with limited range (e.g. 5m).
      Scores go up to 600+, try 50 for example when experiencing jumping estimate issues.-->
    <param name="minimumScore" value="100"/>
<!--  Process a scan each time the robot translates this far-->
    <param name="linearUpdate" value="0.2"/>
<!--  Process a scan each time the robot rotates this far-->
    <param name="angularUpdate" value="0.2"/>
<!--  Process a scan if the last scan processed is older than the update time in seconds.
    A value less than zero will turn time based updates off.-->
    <param name="temporalUpdate" value="0.5"/>
<!--  Resolution of the map-->
    <param name="delta" value="0.025"/>
<!--  Number of beams to skip in each scan.-->
    <param name="lskip" value="0"/>
<!--Number of particles in the filter-->
    <param name="particles" value="120"/>

<!--below paramameters are set by defalut-->
    <param name="sigma" value="0.05"/>
    <param name="kernelSize" value="1"/>
    <param name="lstep" value="0.05"/>
    <param name="astep" value="0.05"/>
    <param name="iterations" value="5"/>
    <param name="lsigma" value="0.075"/>
    <param name="ogain" value="3.0"/>
    <param name="srr" value="0.01"/>
    <param name="srt" value="0.02"/>
    <param name="str" value="0.01"/>
    <param name="stt" value="0.02"/>
    <param name="resampleThreshold" value="0.5"/>
    <param name="xmin" value="-10.0"/>
    <param name="ymin" value="-10.0"/>
    <param name="xmax" value="10.0"/>
    <param name="ymax" value="10.0"/>
    <param name="llsamplerange" value="0.01"/>
    <param name="llsamplestep" value="0.01"/>
    <param name="lasamplerange" value="0.005"/>
    <param name="lasamplestep" value="0.005"/>

    </node>

  <!-- move_base -->
  <arg name="cmd_vel_topic" default="/cmd_vel" />
  <arg name="odom_topic" default="odom" />
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <param name="base_local_planner" value="dwa_local_planner/DWAPlannerROS" />

    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/costmap_common_params_$(arg model).yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find turtlebot3_navigation)/param/local_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/global_costmap_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/move_base_params.yaml" command="load" />
    <rosparam file="$(find turtlebot3_navigation)/param/dwa_local_planner_params.yaml" command="load" />

    <remap from="cmd_vel" to="$(arg cmd_vel_topic)"/>
    <remap from="odom" to="$(arg odom_topic)"/>
  </node>

  <!--<node pkg="rviz" type="rviz" name="rviz" args="-d $(find turtlebot3_navigation)/rviz/turtlebot3_nav.rviz" />-->
</launch>
